From 4d767b2ea89072fbf8b3925929c9a28effa7b714 Mon Sep 17 00:00:00 2001
From: Heiko Schocher <hs@denx.de>
Date: Tue, 29 Aug 2023 06:10:28 +0200
Subject: [PATCH 01/18] tbot/machine/board/uboot.py: add death strings

add possibility to add death strings in UBootAutobootIntercept

Add abstract function

get_death_strings(self) -> List[str]

which gets called from _init_machine()

Signed-off-by: Heiko Schocher <hs@denx.de>
---
 tbot/machine/board/uboot.py | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/tbot/machine/board/uboot.py b/tbot/machine/board/uboot.py
index 15620cc..e8a60bf 100644
--- a/tbot/machine/board/uboot.py
+++ b/tbot/machine/board/uboot.py
@@ -14,10 +14,12 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <https://www.gnu.org/licenses/>.
 
+import abc
 import contextlib
 import re
 import time
 import typing
+from typing import List
 
 import tbot
 from .. import shell, machine, channel
@@ -97,8 +99,21 @@ class UBootAutobootIntercept(machine.Initializer, UbootStartup):
     Keys to press as soon as autoboot prompt is detected.
     """
 
+    @property
+    @abc.abstractmethod
+    def get_death_strings(self) -> List[str]:
+        """
+        return a List of death strings, which are added to the channel
+        in _init_machine()
+        """
+        pass
+
     @contextlib.contextmanager
     def _init_machine(self) -> typing.Iterator:
+        ds = self.get_death_strings()
+        for d in ds:
+            self.ch.add_death_string(d)
+
         if self.autoboot_prompt is not None:
             with self.ch.with_stream(self._uboot_startup_event()):
                 timeout = None
-- 
2.30.2

