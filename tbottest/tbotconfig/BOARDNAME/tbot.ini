# generic lab config for tbot
#
# ssh access to lab host / build host only through ssh keys without
# any passwords.
#
# Variables which get substituted when running tbot

[LABHOST]
labname = @@LABNAME@@
hostname = @@LABHOSTNAME@@
username = @@LABUSER@@
sshkeyfile = /home/${username}/.ssh/id_rsa
date = @@TBOTDATE@@
board = @@TBOTBOARD@@
# where does tbot find tools installed on lab host
toolsdir = /home/${username}/source
# path to tftp directory where tftp server looks in
# This directory is not only used for tftp.
tftproot = /srv/tftpboot
# or ${board}/${date}
tftpsubdir = @@TFTPSUBDIR@@
workdir = /work/${username}/tbot-workdir/${board}
tmpdir = /tmp/tbot/${username}/${board}
proxyjump = pi@xeidos.ddns.net
usernamessh = <Username on ssh machine>
labinit = ["sudo systemctl --all --no-pager restart tftpd-hpa", "sudo systemctl stop NetworkManager"]
seggercmd = "sudo /home/pi/source/JLink_Linux_V686e_arm/JLinkExe"
nfs_base_path = /work/pi/tbot-workdir/nfs
shelltype = bash
uselocking = no

[BUILDHOST]
name = threadripper-big-build
username = hs
hostname = 192.168.1.120
dl_dir = /work/downloads
sstate_dir = /work2/${username}/tbot2go/yocto-sstate
kas_ref_dir = /work/${username}/src
workdir = /work/big/${username}/tbot2go
authenticator = /home/${username}/.ssh/id_rsa
shelltype = bash

# local build host, which means tbot uses the machine, on which
# it is started as build host.
[BUILDHOST_local]
name = local-build
username = hs
hostname = 192.168.1.120
# intentionally use relative path
# but of course you can use here absolute paths to.
dl_dir = work/tbottest/dl_dir
sstate_dir = work/tbottest/yocto-sstate
kas_ref_dir = work/tbottest/kas-ref-dir
workdir = work/tbottest/work
shelltype = bash

[BUILDHOST_sisyphus]
name = denx-sisyphus
username = hs
hostname = sisyphus
port = 22
dl_dir = /opt/downloads
sstate_dir = /work/${username}/yocto/yocto-sstate
workdir = /work/${username}/yocto
authenticator = /home/${username}/.ssh/id_rsa
initcmd = ["cat /etc/os-release"]
shelltype = bash

# serial console access config
[SCRIPTCOM_BOARDNAME]
scriptname = @@SCRIPTCOMSCRIPTNAME@@
exitstring = @@SCRIPTCOMEXITSTRING@@

[PICOCOM_BOARDNAME]
baudrate = @@PICOCOMBAUDRATE@@
device = @@PICOCOMDEV@@
delay = @@PICOCOMDELAY@@
noreset = @@PICOCOMNORESET@@

[KERMIT_BOARDNAME]
cfgfile = /home/pi/kermrc_BOARDNAME
delay = 3

[SDWIRE]
serial = da23

# powercontrol config
[POWERSHELLSCRIPT_BOARDNAME]
script = "@@POWERSHELLSCRIPTNAME@@"

[SISPMCTRL_BOARDNAME]
device = @@SISPMCTRLMAC@@
port = @@SISPMCTRLPORT@@

[GPIOPMCTRL_BOARDNAME]
gpiopmctl_pin = @@POWERGPIOPIN@@
gpiopmctl_state = @@POWERGPIOSTATE@@

[TF_BOARDNAME]
uid = @@POWERTFUID@@
channel = @@POWERTFCHANNEL@@

[UBCFG_BOARDNAME]
ethintf = eth0

# board ip setup
# !! One board can have more than one ethernet device
# so after boardname add "_<ethdevicename>"
# and write a section for each ethernet device on the board

[IPSETUP_BOARDNAME_eth0]
# ethernet device used on lab host
labdevice = eth0
netmask = @@IPSETUPMASK@@
ethaddr = @@IPSETUPETH@@
ipaddr = @@IPSETUPIP@@
serverip = @@IPSETUPSERVERIP@@

[UUU_CONFIG_BOARDNAME]
cmd = LBD/SPL,SDPV: delay 100,SDPV: write -f LBD/u-boot.img -addr 0x877fffc0,SDPV: jump -addr 0x877fffc0

[BOOTMODE_BOARDNAME]
modes = [{"name":"bootmode:uart0", "gpios":"14:0"}, {"name":"bootmode:emmc", "gpios":"14:1"} ]

# if you want to call a boardspecific function
# use this as an example
#modes = [{"name":"bootmode:usb", "func":"cxg3_setbootmode_usb"}, {"name":"bootmode:emmc", "func":"cxg3_setbootmode_emmc"} ]
#
# and define the functions cxg3_setbootmode_usb cxg3_setbootmode_emmc
# in a new file in tbotconfig/labcallbacks.py
#
# This is a hack, better to add an implementation, but useful
# for fast trying out stuff

[SSHMACHINE]
name = laptop-machine
username = ${usernamessh}
port = 722
hostname = 192.168.1.107
workdir = /tmp
toolsdir = /home/${usernamessh}/source

[SEGGER_CONFIG_AM335XBOARD]
cmds = [{"cmd":${LABHOST:seggercmd}, "prompt":"J-Link>"}, \
    {"cmd":"Device AM3354", "prompt":"J-Link>"}, \
    {"cmd":"connect", "prompt":"TIF>"}, \
    {"cmd":"J", "prompt":"JTAGConf>"}, \
    {"cmd":"-1", "prompt":"Speed>"}, \
    {"cmd":"4000", "prompt":"J-Link>"}, \
    {"cmd":"halt", "prompt":"J-Link>"}, \
    {"cmd":"SetPC 0x402F0400", "prompt":"J-Link>"}, \
    {"cmd":"w2  0x402f0400 0xa000", "prompt":"J-Link>"}, \
    {"cmd":"w2  0x402f0402 0x4700", "prompt":"J-Link>"}, \
    {"cmd":"s", "prompt":"J-Link>"}, \
    {"cmd":"s", "prompt":"J-Link>"}, \
    {"cmd":"s", "prompt":"J-Link>"}, \
    {"cmd":"SetPC 0x402F0400", "prompt":"J-Link>"}, \
    {"cmd":"halt", "prompt":"J-Link>"}, \
    {"cmd":"loadbin ${LABHOST:tftproot}/${LABHOST:tftpsubdir}/ram_u-boot-spl.bin 0x402F0400", "prompt":"J-Link>"}, \
    {"cmd":"setbp 0x80800000 T H", "prompt":"J-Link>"}, \
    {"cmd":"go", "prompt":"J-Link>"}, \
    {"cmd":"halt", "prompt":"J-Link>"}, \
    {"cmd":"loadbin ${LABHOST:tftproot}/${LABHOST:tftpsubdir}/ram_u-boot.bin 0x80800000", "prompt":"J-Link>"}, \
    {"cmd":"SetPC 0x80800000", "prompt":"J-Link>"}, \
    {"cmd":"go", "prompt":"J-Link>"}]
